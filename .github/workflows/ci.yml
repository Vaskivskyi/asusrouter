name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request: ~
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Preparation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install `uv`
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache `uv` dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-

      - name: Sync dependencies
        run: |
          uv sync --all-groups

  unit-tests:
    name: Unit Tests
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install `uv`
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache `uv` dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-

      - name: Sync dependencies
        run: |
          uv sync --all-groups

      - name: Run unit tests
        run: |
          uv run pytest --cov=asusrouter --cov-report=xml:unit-tests-cov-${{ matrix.python-version }}.xml -k 'not test_devices'

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: unit-tests-cov-${{ matrix.python-version }}
          path: unit-tests-cov-${{ matrix.python-version }}.xml

  device-tests:
    name: Device Tests
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install `uv`
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache `uv` dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-

      - name: Sync dependencies
        run: |
          uv sync --all-groups

      - name: Run real-data tests
        run: |
          uv run pytest tests/test_devices.py --cov=asusrouter --cov-report=xml:real-data-tests-cov-${{ matrix.python-version }}.xml --log-cli-level=INFO

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: real-data-tests-cov-${{ matrix.python-version }}
          path: real-data-tests-cov-${{ matrix.python-version }}.xml

  codecov:
    name: Codecov
    needs: [unit-tests, device-tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Download unit-tests coverage from artifacts
        uses: actions/download-artifact@v4.1.9
        with:
          name: unit-tests-cov-${{ matrix.python-version }}
          path: .

      - name: Download real-data-tests coverage from artifacts
        uses: actions/download-artifact@v4.1.9
        with:
          name: real-data-tests-cov-${{ matrix.python-version }}
          path: .

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: unit-tests-cov-${{ matrix.python-version }}.xml,real-data-tests-cov-${{ matrix.python-version }}.xml
